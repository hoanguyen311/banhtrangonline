{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","_ref","frontmatter","data","markdownRemark","address","phone","email","a","createElement","title","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","Helmet_default","rel","href","integrity","crossorigin","Container","Nav","variant","Item","Link","as","Date","getFullYear","packageJson","author","_755544856","node","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","array","arrayOf"],"mappings":"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","file":"component---src-pages-contact-js-f516414950264bee60ec.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SecondPage = ({ data }) => {\n  const { markdownRemark: { frontmatter } } = data;\n  const { address, phone, email } = frontmatter;\n  return (\n    <Layout>\n      <SEO title=\"Page two\" />\n      <p>Address: {address} </p>\n      <p>Phone: {phone} </p>\n      <p>Email: {email} </p>\n    </Layout>\n  );\n}\n\nexport default SecondPage;\n\nexport const query = graphql`\n  {\n    markdownRemark(fields: { slug: { eq: \"/contact/\" } }) {\n      frontmatter {\n        address\n        phone\n        email\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#20232a`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Helmet from 'react-helmet';\nimport { Nav, Container } from 'react-bootstrap';\nimport { Link } from 'gatsby';\nimport packageJson from '../../package.json';\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Helmet>\n          <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css\"\n            integrity=\"sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS\"\n            crossorigin=\"anonymous\"\n          />\n        </Helmet>\n        <Container>\n          <Nav variant=\"pills\">\n            <Nav.Item>\n              <Nav.Link as={Link} to=\"/\">\n                Home\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link as={Link} to=\"/contact\">\n                  Contact\n                </Nav.Link>\n            </Nav.Item>\n          </Nav>\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Build by {packageJson.author}\n          </footer>\n        </Container>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}